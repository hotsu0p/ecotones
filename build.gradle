plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven { url = "https://maven.gegy.dev" }
	maven { url = "https://maven.terraformersmc.com/" }
}

loom {
	accessWidenerPath = file("src/main/resources/ecotones.aw")
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	modImplementation ("dev.emi:emi-fabric:1.0.5+1.20.1") {
		transitive = false
	}

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	// Unused textures
	exclude 'assets/ecotones/textures/unused/**'

	// Raw paint.net files that still have the original layers
	exclude 'assets/ecotones/textures/raw/**'

	// Template files for sets of textures
	exclude 'assets/ecotones/textures/template/**'
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

afterEvaluate {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xmaxerrs" << "5000"
	}
}